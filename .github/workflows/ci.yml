
name: frontend-ci
on:
  push:
    branches: [ "develop", "main" ]

jobs:
  test-build-push:
    runs-on: ubuntu-latest
    env:
      IMAGE: ghcr.io/${{ github.repository_owner }}/sky-frontend
      TAG: ${{ github.sha }}
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with: { node-version: "20", cache: "npm" }

      - run: npm ci
      - run: npm run lint
      - run: npm run test -- --watch=false --browsers=ChromeHeadless

      # Contract check: lade OpenAPI vom letzten Backend-Artifact (einfacher Weg)
      - name: Download OpenAPI (from backend artifact)
        uses: dawidd6/action-download-artifact@v3
        with:
          workflow: ci.yml
          repo: yourorg/sky-backend
          name: openapi
          path: ./schemas
          if_no_artifact_found: ignore

      - name: Generate API types (fail if schema incompatible)
        run: |
          if [ -f ./schemas/openapi.json ]; then
            npx openapi-typescript ./schemas/openapi.json -o src/app/api-types.d.ts
          else
            echo "No openapi.json found â€“ skipping strict contract check"
          fi

      - name: Login GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build & Push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ env.IMAGE }}:${{ env.TAG }}

      - name: Deploy DEV (only on develop)
        if: github.ref == 'refs/heads/develop'
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_SSH_KEY }}
          script: |
            cd ~/sky-infra
            export DEV_FRONTEND_TAG=${{ env.TAG }}
            docker compose -f compose.dev.yml --env-file .env.dev pull dev-frontend
            docker compose -f compose.dev.yml --env-file .env.dev up -d dev-frontend

  e2e:
    needs: test-build-push
    if: github.ref == 'refs/heads/develop'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Playwright
        uses: microsoft/playwright-github-action@v1
      - name: Run smoke E2E vs dev
        env:
          BASE_URL: https://dev.app.skylad.de
        run: npm run e2e:smoke
